<!DOCTYPE html>
{% load static %}
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Blog</title>
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
	<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
	<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
	<script src="//cdn.jsdelivr.net/npm/medium-editor@latest/dist/js/medium-editor.min.js"></script>
	<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/medium-editor@latest/dist/css/medium-editor.min.css" type="text/css" media="screen" charset="utf-8">
	<link rel="stylesheet" href="{% static 'css/blog_app.css' %}">
	<link href="https://fonts.googleapis.com/css?family=Roboto&display=swap" rel="stylesheet">



</head>
<body>
<nav class="navbar navbar-expand-lg navbar-light bg-light techfont custom-navbar">
  <a class="navbar-brand big-brand" href="{% url 'post_list' %}">M S</a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>

  <div class="collapse navbar-collapse" id="navbarSupportedContent">
    <ul class="navbar-nav mr-auto">
      <li class="nav-item active">
        <a class="nav-link" href="{% url 'about' %}">About <span class="sr-only">(current)</span></a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="https://www.github.com">Github</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="https://www.linkedin.com">LinkedIn</a>
      </li>
    </ul>
    <ul class="nav navbar-nav navbar-right">
	    {% if user.is_authenticated %}
		    <li>
			    <a href="{% url 'post_new' %}">New Post</a>
		    </li>
		    <li>
			    <a href="{% url 'post_draft_list' %}">Drafts</a>
		    </li>
		    <li>
			    <a href="{% url 'logout' %}">Logout</a>
		    </li>
		    <li>
			    <a>Welcome: {{ user.username }}</a>
		    </li>
		    {% else %}
		    <li>
			    <a class="nav navbar-right" href="{% url 'login' %}"><span class="glyphicon glyphicon-user">login

			    </span></a>
		    </li>

	    {% endif %}
    </ul>
  </div>
</nav>

<div class="flex-container">
	<div class="item1">
		{% block content %}

		{% endblock %}
	</div>
</div>

</body>
</html>



views.py

from django.shortcuts import render, get_object_or_404, redirect
from django.utils import timezone
from django.contrib.auth.decorators import login_required
from django.views.generic import (TemplateView, ListView, DetailView, CreateView, UpdateView, DeleteView)
from blog_app.models import Post, Comment
from django.utils import timezone
from django.contrib.auth.mixins import LoginRequiredMixin
from blog_app.forms import PostForm, CommentForm
from django.urls import reverse_lazy


class AboutView(TemplateView):
    template_name = 'about.html'


class PostListView(ListView):
    model = Post

    def get_queryset(self):
        return Post.objects.filter(publish_date__lte=timezone.now()).order_by('-publish_date')


class PostDetailView(DetailView):
    model = Post


class CreatePostView(LoginRequiredMixin, CreateView):
    login_url = '/login/'
    redirect_field_name = 'blog_app:blog_app/post_detail.html'
    form_class = PostForm
    model = Post


class PostUpdateView(LoginRequiredMixin, UpdateView):
    login_url = '/login/'
    redirect_field_name = 'blog_app:blog_app/post_detail.html'
    form_class = PostForm
    model = Post


class PostDeleteView(LoginRequiredMixin, DetailView):
    model = Post
    success_url = reverse_lazy('blog_app:post_list')


class DraftListView(LoginRequiredMixin, ListView):
    login_url = '/login/'
    redirect_field_name = 'blog_app:blog_app/post_list.html'
    model = Post

    def get_queryset(self):
        return Post.objects.filter(publish_date__isnull=True).order_by('create_date')

# for comments ##########


@login_required()
def add_comment_to_post(request, pk):
    post = get_object_or_404(Post, pk=pk)
    if request.method == 'POST':
        form = CommentForm(request.POST)
        if form.is_valid():
            comment = form.save(commit=False)
            comment.post = post
            comment.save()
            return redirect('post_detail', pk=post.pk)
    else:
        form = CommentForm()
    return render(request, 'blog_app/comment_form.html', {'form': form})


@login_required()
def comment_approve(request, pk):
    comment = get_object_or_404(Comment, pk=pk)
    comment.approve()
    return redirect('blog_app:post_detail', pk=comment.post.pk)


@login_required()
def comment_remove(request, pk):
    comment = get_object_or_404(Comment, pk=pk)
    post_pk = comment.post.pk
    comment.delete()
    return redirect('blog_app:post_detail', pk=post_pk)


@login_required()
def post_publish(request, pk):
    post = get_object_or_404(Post, pk=pk)
    post.publish()
    return redirect('blog_app:post_detail', pk=pk)





details.html

<!DOCTYPE html>
{% extends 'blog_app/base.html' %}
{% block content %}
<h1 class="posttitle loader">
{{ post.title }}
</h1>
	{% if post.published_date %}
		<div class="date postdate">
		{{ post.published_date }}
		</div>
		{% else %}
		<a class="btn btn-default" href="{% url 'blog_app:post_publish' pk %}">publish</a>
	{% endif %}
	<div class="postcontent">
	{{ post.content|safe|linebreaksbr }}
	{% if user.is_authenticatd %}
		<a class="btn btn-primary" href="{% url 'blog_app:post_edit' pk=post.pk %}">
		<span class="glyphicon glyphicon-remove"></span>
		</a>
	{% endif %}
		<hr>
		<a class="btn btn-primary btn-comment" href="{% url 'blog_app:add_comment_to_post' pk=post.pk %}">
			Add Comment
		</a>
	<div class="flex-container">
		{% for comment in post.comments.all %}
		<br>
		{% if user.authenticated or comment.approved_comment %}
			{{ comment.create_date }}
			{% if not comment.approved_comment %}
			<a class="btn btn-default" href="{% url 'comment_remove' pk=comment.pk %}">
		<span class="glyphicon glyphicon-remove"></span>
		</a>
				<a class="btn btn-default" href="{% url 'comments_approve' pk=comment.pk %}">
		<span class="glyphicon glyphicon-ok"></span>
		</a>
				{% endif %}

	<p>{{ comment.text|safe|linebreaks }}</p>
	<p>Posted By: {{ comment.author }}</p>
	{% endif %}
	{% empty %}
	<p>No Comments</p>
	</div>
	{% endfor %}
	</div>
{% endblock %}










<!DOCTYPE html>
{% extends 'blog_app/base.html' %}
{% block content %}
<h1 class="posttitle loader">
{{ post.title }}
</h1>
	{% if post.published_date %}
		<div class="date postdate">
		{{ post.published_date }}
		</div>
		{% else %}
		<a class="btn btn-default" href="{% url 'post_publish' pk=post.pk %}">publish</a>
	{% endif %}
	<div class="postcontent">
	{{ post.content|safe|linebreaksbr }}
	{% if user.is_authenticatd %}
		<a class="btn btn-primary" href="{% url 'post_edit' pk=post.pk %}">
		<span class="glyphicon glyphicon-remove"></span>
		</a>
	{% endif %}
		<hr>
		<a class="btn btn-primary btn-comment" href="{% url 'add_comment_to_post' pk=post.pk %}">
			Add Comment
		</a>
	  <div class="container">


  {% for comment in post.comments.all %}
  <br>
      {% if user.is_authenticated or comment.approved_comment %}

              {{ comment.created_date }}
              {% if not comment.approved_comment %}
                  <a class="btn btn-primary" href="{% url 'comment_remove' pk=comment.pk %}"><span class="fa fa-remove"></span></a>
                  <a class="btn btn-primary" href="{% url 'comment_approve' pk=comment.pk %}"><span class="fa fa-check"></span></a>
              {% endif %}

          <p>{{ comment.text|safe|linebreaks }}</p>
          <p>Posted by: <strong>{{ comment.author }}</strong></p>

      {% endif %}
  {% empty %}
      <p>No comments posted.</p>

</div>
	  {% endfor %}
	</div>
{% endblock %}
